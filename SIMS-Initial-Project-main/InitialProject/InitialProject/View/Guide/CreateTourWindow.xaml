<Window x:Class="InitialProject.View.Guide.CreateTourWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:InitialProject.View.Guide"
        xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
        xmlns:focus="clr-namespace:InitialProject.Resources.FocusBehaviour"
        mc:Ignorable="d"
        Title="CreateTourWindow" Height="830" Width="1024"
        Background="#F2F2F2"
        WindowStartupLocation="CenterScreen">
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="*"/>

        </Grid.ColumnDefinitions>
        <StackPanel>
            <GroupBox Header="Basic Info" Margin="10" FontSize="20" Foreground="#007ACC" BorderBrush="#007ACC" BorderThickness="2" Padding="5">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <TextBlock Text="Tour Name:" 
                           Grid.Row="0" 
                           Grid.Column="0" 
                           FontSize="13" 
                           Foreground="#007ACC" 
                           FontWeight="Bold"
                           VerticalAlignment="Bottom"/>
                    <StackPanel Orientation="Vertical" Grid.Row="0"  Grid.Column="1">
                            <TextBox
                         FontSize="13"
                         Background="Transparent" BorderBrush="Transparent" Text="{Binding Path = TourNameValidation, UpdateSourceTrigger=PropertyChanged}"  Foreground="#FFA500"  IsReadOnly="True"  Focusable="False" IsHitTestVisible="False"/>
                        <Border BorderBrush="{Binding Path=TourNameBorderColor}" BorderThickness="1">
                            <TextBox Text="{Binding Path=TourName, UpdateSourceTrigger=PropertyChanged}"
                         FontSize="13"
                         IsEnabled="{Binding Path = IsEnabledTourNameTextBox}"/>
                        </Border>
                    </StackPanel>
                    <TextBlock Text="Tour Desription:" 
                           Grid.Row="1" 
                           Grid.Column="0" 
                           FontSize="13" 
                           Foreground="#007ACC" 
                           FontWeight="Bold"
                           VerticalAlignment="Center"/>
                    <StackPanel Orientation="Vertical" Grid.Row="1"  Grid.Column="1">
                        <TextBox                         
                         FontSize="13"
                         Background="Transparent" BorderBrush="Transparent"
                         Text="{Binding Path = TourDescriptionValidation, UpdateSourceTrigger=PropertyChanged}"  Foreground="#FFA500" IsReadOnly="True"  Focusable="False" IsHitTestVisible="False" />
                        <Border BorderBrush="{Binding Path=TourDescriptionBorderColor}" BorderThickness="1">
                            <TextBox Text="{Binding Path=TourDescription, UpdateSourceTrigger=PropertyChanged}"
                         Grid.Row="1" 
                         Grid.Column="1"
                         TextWrapping="Wrap"
                         Height="100"
                         FontSize="13"
                         IsEnabled="{Binding Path = IsEnabledTourDescriptionTextBox}"/>
                        </Border>
                    </StackPanel>
                    
                    <TextBlock Text="Language:" 
                           Grid.Row="2" 
                           Grid.Column="0" 
                           FontSize="13" 
                           Foreground="#007ACC" 
                           FontWeight="Bold"
                           VerticalAlignment="Bottom"/>
                    <StackPanel Orientation="Vertical" Grid.Row="2"  Grid.Column="1">
                        <TextBox                         
                         FontSize="13"
                         Background="Transparent" BorderBrush="Transparent" Text="{Binding Path = TourLanguageValidation, UpdateSourceTrigger=PropertyChanged}"  Foreground="#FFA500"  IsReadOnly="True"  Focusable="False" IsHitTestVisible="False"/>
                        <Border BorderBrush="{Binding Path=TourLanguageBorderColor}" BorderThickness="1">
                            <TextBox Text="{Binding Path=TourLanguage, UpdateSourceTrigger=PropertyChanged}"
                         FontSize="13"
                         IsEnabled="{Binding Path = IsEnabledTourLanguageTextBox}"/>
                        </Border>
                    </StackPanel>

                    <TextBlock Text="Country:" 
                           Grid.Row="3" 
                           Grid.Column="0" 
                           FontSize="13" 
                           Foreground="#007ACC" 
                           FontWeight="Bold"
                           VerticalAlignment="Bottom"/>
                    <StackPanel Orientation="Vertical" Grid.Row="3"  Grid.Column="1">
                        <TextBox                         
                         FontSize="13"
                         Background="Transparent" BorderBrush="Transparent" 
                         IsReadOnly="True"  Focusable="False" IsHitTestVisible="False" Text="{Binding Path = TourCountryValidation, UpdateSourceTrigger=PropertyChanged}"  Foreground="#FFA500"/>
                        <Border BorderBrush="{Binding Path=TourCountryBorderColor}" BorderThickness="1">
                            <ComboBox SelectedItem="{Binding Path=TourCountry, UpdateSourceTrigger=PropertyChanged}"
                          ItemsSource="{Binding Path=Countries, UpdateSourceTrigger=PropertyChanged}"
                          SelectionChanged="Country_SelectionChanged"
                          Grid.Row="3" 
                          Grid.Column="1"
                          FontSize="13"
                          IsEnabled="{Binding Path=IsEnabledCountryComboBox}"
                          IsDropDownOpen="{Binding Path=IsCountryComboBoxDropDown}"/>
                        </Border>
                    </StackPanel>
                    <TextBlock Text="City:" 
                           Grid.Row="4" 
                           Grid.Column="0" 
                           FontSize="13" 
                           Foreground="#007ACC" 
                           FontWeight="Bold"
                           VerticalAlignment="Bottom"/>
                    <StackPanel Orientation="Vertical" Grid.Row="4"  Grid.Column="1">
                        <TextBox                         
                         FontSize="13"
                         Background="Transparent" BorderBrush="Transparent" 
                         IsReadOnly="True"  Focusable="False" IsHitTestVisible="False" Text="{Binding Path = TourCityValidation, UpdateSourceTrigger=PropertyChanged}"  Foreground="#FFA500"/>
                        <Border BorderBrush="{Binding Path=TourCityBorderColor}" BorderThickness="1">
                            <ComboBox SelectedItem="{Binding Path=TourCity, UpdateSourceTrigger=PropertyChanged}"
                          ItemsSource="{Binding Path=Cities, UpdateSourceTrigger=PropertyChanged}"
                          Grid.Row="4" 
                          Grid.Column="1"
                          FontSize="13"
                          IsEnabled="{Binding Path=IsEnabledCityComboBox}"
                          IsDropDownOpen="{Binding Path=IsCityComboBoxDropDown}"/>
                        </Border>
                    </StackPanel>
                    <TextBlock Text="Maximum Guests:" 
                           Grid.Row="5" 
                           Grid.Column="0" 
                           FontSize="13" 
                           Foreground="#007ACC" 
                           FontWeight="Bold"
                           VerticalAlignment="Bottom"
                            Margin="0 0 10 0"/>
                    <StackPanel Orientation="Vertical" Grid.Row="5"  Grid.Column="1">
                        <TextBox                         
                         FontSize="13"
                         Background="Transparent" BorderBrush="Transparent" 
                         IsReadOnly="True"  Focusable="False" IsHitTestVisible="False" Text="{Binding Path = MaximumGuestsValidation, UpdateSourceTrigger=PropertyChanged}"  Foreground="#FFA500"/>
                        <Border BorderBrush="{Binding Path=MaximumGuestsBorderColor}" BorderThickness="1">
                            <TextBox Text="{Binding Path=MaximumGuests, UpdateSourceTrigger=PropertyChanged}"
                         Grid.Row="5" 
                         Grid.Column="1"
                         FontSize="13"
                         IsEnabled="{Binding Path = IsEnabledMaximumGuestsTextBox}"/>
                        </Border>
                    </StackPanel>
                    <TextBlock Text="Druation:" 
                           Grid.Row="6" 
                           Grid.Column="0" 
                           FontSize="13" 
                           Foreground="#007ACC" 
                           FontWeight="Bold"
                           VerticalAlignment="Bottom"/>
                    <StackPanel Orientation="Vertical" Grid.Row="6"  Grid.Column="1">
                        <TextBox                         
                         FontSize="13"
                         Background="Transparent" BorderBrush="Transparent" 
                         IsReadOnly="True"  Focusable="False" IsHitTestVisible="False" Text="{Binding Path = DurationValidation, UpdateSourceTrigger=PropertyChanged}"  Foreground="#FFA500"/>
                        <Border BorderBrush="{Binding Path=DurationBorderColor}" BorderThickness="1">
                            <TextBox Text="{Binding Path=TourDuration, UpdateSourceTrigger=PropertyChanged}"
                         Grid.Row="6" 
                         Grid.Column="1"
                         FontSize="13"
                         IsEnabled="{Binding Path = IsEnabledTourDurationTextBox}"/>
                        </Border>
                    </StackPanel>
                </Grid>
            </GroupBox>

            <GroupBox Header="Date And Time Info" Margin="5" FontSize="20" Foreground="#007ACC" BorderBrush="#007ACC" BorderThickness="2" Padding="5">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <TextBlock Text="Date:" 
                           Grid.Row="0" 
                           Grid.Column="0" 
                           FontSize="13" 
                           Foreground="#007ACC" 
                           FontWeight="Bold"
                               VerticalAlignment="Bottom"/>
                    <StackPanel Orientation="Vertical" Grid.Row="0"  Grid.Column="1">
                        <TextBox                         
                         FontSize="13"
                         Background="Transparent" BorderBrush="Transparent" 
                         Text="{Binding Path = DateValidation, UpdateSourceTrigger=PropertyChanged}"  Foreground="#FFA500" IsReadOnly="True"  Focusable="False" IsHitTestVisible="False"/>
                        <Border BorderBrush="{Binding Path=DateBorderColor}" BorderThickness="1">
                            <DatePicker SelectedDate="{Binding Path=SelectedDateInDatePicker, UpdateSourceTrigger=PropertyChanged}"
                          Grid.Row="0" 
                          Grid.Column="1"
                          FontSize="13"
                          GotFocus="DatePicker_GotFocus"
                          LostFocus="DatePicker_LostFocus"
                          IsDropDownOpen="{Binding Path=IsDatePickerDropDown}"
                          IsEnabled="{Binding Path = IsEnabledDatePicker}"/>
                        </Border>
                    </StackPanel>
                    <TextBlock Text="Time:" 
                           Grid.Row="1" 
                           Grid.Column="0" 
                           FontSize="13" 
                           Foreground="#007ACC" 
                           FontWeight="Bold"
                           VerticalAlignment="Bottom"
                           Margin="0 0 10 0"/>
                    <StackPanel Orientation="Vertical" Grid.Row="1" Grid.Column="1">
                        <TextBox                         
                         FontSize="13"
                         Background="Transparent" BorderBrush="Transparent" 
                         IsReadOnly="True"  Focusable="False" IsHitTestVisible="False"/>
                        <StackPanel  Orientation="Horizontal">

                                    <Border BorderBrush="{Binding Path=DateBorderColor}" BorderThickness="1" Margin="0 0 40 0">
                                <ComboBox 
                          SelectedItem="{Binding Path=SelectedHour, UpdateSourceTrigger=PropertyChanged}"
                          ItemsSource="{Binding Path=Hours, UpdateSourceTrigger=PropertyChanged}"
                          Width="100"
                          FontSize="13"
                          GotFocus="HoursComboBox_GotFocus"
                          LostFocus="HoursComboBox_LostFocus"
                          IsDropDownOpen="{Binding Path=IsHoursComboBoxDropDown}"
                          IsEnabled="{Binding Path = IsEnabledHoursComboBox}"/>
                            </Border>
                            <Border BorderBrush="{Binding Path=DateBorderColor}" BorderThickness="1">
                                <ComboBox 
                          SelectedItem="{Binding Path=SelectedMinute, UpdateSourceTrigger=PropertyChanged}"
                          ItemsSource="{Binding Path=Minutes, UpdateSourceTrigger=PropertyChanged}"
                          Width="100"
                          FontSize="13"                          
                          GotFocus="MinutesComboBox_GotFocus"
                          LostFocus="MinutesComboBox_LostFocus"
                          IsDropDownOpen="{Binding Path=IsMinutesComboBoxDropDown}"
                          IsEnabled="{Binding Path = IsEnabledMinutesComboBox}"/>
                            </Border>
                            <Button Content="Add (ENTER)" Height="30" Width="80" FontSize="11" Background="#007ACC" Foreground="White" BorderBrush="#007ACC" BorderThickness="2"  Click="AddDate_Click"  IsEnabled="{Binding IsEnabledButton}" Margin="20 0 0 0">
                                <Button.Template>
                                    <ControlTemplate TargetType="Button">
                                        <Border x:Name="border" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" CornerRadius="20">
                                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                                        </Border>
                                        <ControlTemplate.Triggers>
                                            <EventTrigger RoutedEvent="Button.Click">
                                                <BeginStoryboard>
                                                    <Storyboard>
                                                        <ColorAnimation Storyboard.TargetName="border" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" From="#007ACC" To="#005F8B" Duration="0:0:0.2" />
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </EventTrigger>
                                            <Trigger Property="IsMouseOver" Value="True">
                                                <Setter TargetName="border" Property="Background" Value="#005F8B" />
                                            </Trigger>
                                            <Trigger Property="IsPressed" Value="True">
                                                <Setter TargetName="border" Property="Background" Value="#00415E" />
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Button.Template>
                            </Button>
                        </StackPanel>
                    </StackPanel>
                    <StackPanel Orientation="Vertical" Grid.Row="2" Grid.ColumnSpan="2">
                        <TextBox                         
                         FontSize="13"
                         Background="Transparent" BorderBrush="Transparent" 
                         IsReadOnly="True"  Focusable="False" IsHitTestVisible="False" Text="{Binding Path = DateListValidation, UpdateSourceTrigger=PropertyChanged}"  Foreground="#FFA500"/>
                        <Border BorderBrush="{Binding Path=DateListBorderColor}" BorderThickness="1">
                            <ListBox 
                                SelectedItem="{Binding Path=SelectedDateInList, UpdateSourceTrigger=PropertyChanged}"
                                ItemsSource="{Binding Path=TourDates, UpdateSourceTrigger=PropertyChanged}"
                                Height="150"
                                ScrollViewer.VerticalScrollBarVisibility="Visible"
                                IsEnabled="{Binding Path=IsEnabledTourDatesListBox}">

                                <ListBox.ItemTemplate>
                                    <DataTemplate>
                                        <TextBlock Text="{Binding Path=., StringFormat='{}{0:d.M.yyyy HH:mm}'}"/>
                                    </DataTemplate>
                                </ListBox.ItemTemplate>
                            </ListBox>
                        </Border>
                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" Grid.Row="3" Grid.ColumnSpan="2">
                        <Image 
                        Source="/Resources/Images/trash-can.png" 
                        Width="20" 
                        Height="20" 
                        Margin="5" />
                        <TextBlock FontSize="16" 
                               Text="Delete The Selected Date And Time With DEL" 
                               Foreground="#007ACC" 
                               VerticalAlignment="Center"/>
                    </StackPanel>
                        </StackPanel>
                </Grid>
            </GroupBox>
        </StackPanel>
        <StackPanel Grid.Column="2">
            <GroupBox Header="Checkpoint Info" Margin="5" FontSize="20" Foreground="#007ACC" BorderBrush="#007ACC" BorderThickness="2" Padding="5">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>

                    <TextBlock Text="Checkpoint Name:" 
                           Grid.Row="0" 
                           Grid.Column="0" 
                           FontSize="13" 
                           Foreground="#007ACC" 
                           FontWeight="Bold"
                               Margin="0 0 10 0 "
                               VerticalAlignment="Center"/>
                    <StackPanel Orientation="Horizontal"  Grid.Row="0"  Grid.Column="1" HorizontalAlignment="Stretch">
                        <TextBox Text="{Binding Path=CheckpointName, UpdateSourceTrigger=PropertyChanged}"
                         FontSize="13"
                         GotFocus="CheckpointTextBox_GotFocus"
                         LostFocus="CheckpointTextBox_LostFocus"
                         Width="200"              
                         IsEnabled="{Binding Path = IsEnabledCheckpointNameTextBox}"/>
                        <Button Content="Add (ENTER)" Height="30" Width="80" FontSize="11" Background="#007ACC" Foreground="White" BorderBrush="#007ACC" BorderThickness="2"  Click="AddCheckpoint_Click"  IsEnabled="{Binding IsEnabledButton}" Margin="20 0 0 0" HorizontalAlignment="Right">
                            <Button.Template>
                                <ControlTemplate TargetType="Button">
                                    <Border x:Name="border" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" CornerRadius="20">
                                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                                    </Border>
                                    <ControlTemplate.Triggers>
                                        <EventTrigger RoutedEvent="Button.Click">
                                            <BeginStoryboard>
                                                <Storyboard>
                                                    <ColorAnimation Storyboard.TargetName="border" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" From="#007ACC" To="#005F8B" Duration="0:0:0.2" />
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </EventTrigger>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter TargetName="border" Property="Background" Value="#005F8B" />
                                        </Trigger>
                                        <Trigger Property="IsPressed" Value="True">
                                            <Setter TargetName="border" Property="Background" Value="#00415E" />
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Button.Template>
                        </Button>
                    </StackPanel>
                    <StackPanel Orientation="Vertical" Grid.Row="1" Grid.ColumnSpan="2">
                        <TextBox                         
                         FontSize="13"
                         Background="Transparent" BorderBrush="Transparent" 
                         IsReadOnly="True"  Focusable="False" IsHitTestVisible="False" Text="{Binding Path = CheckpointListValidation, UpdateSourceTrigger=PropertyChanged}"  Foreground="#FFA500"/>
                        <Border BorderBrush="{Binding Path=CheckpointListBorderColor}" BorderThickness="1">
                            <ListBox Grid.Row="1" Grid.ColumnSpan="2"
                         Height="150" 
                         ItemsSource="{Binding TourCheckpoints}" 
                         SelectedItem="{Binding Path=SelectedCheckpoint}"
                         IsEnabled="{Binding Path = IsEnabledTourCheckpointsListBox}"
                         ScrollViewer.VerticalScrollBarVisibility="Visible">
                                <ListBox.ItemTemplate>
                                    <DataTemplate>
                                        <StackPanel Orientation="Horizontal">
                                            <TextBlock Text="{Binding Order}" FontWeight="Bold" Margin="5 0 5 0" FontSize="13"/>
                                            <TextBlock Text="{Binding Name}" Margin="5 0 0 0" FontSize="13"/>
                                        </StackPanel>
                                    </DataTemplate>
                                </ListBox.ItemTemplate>
                            </ListBox>
                        </Border>
                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" Grid.Row="3" Grid.ColumnSpan="2">
                        <Image 
                        Source="/Resources/Images/trash-can.png" 
                        Width="20" 
                        Height="20" 
                        Margin="5" />
                        <TextBlock FontSize="16" 
                               Text="Delete The Selected Checkpoint With DEL" 
                               Foreground="#007ACC" 
                               VerticalAlignment="Center"/>
                    </StackPanel>
                    </StackPanel>
                </Grid>
            </GroupBox>
            
            <GroupBox Grid.Row="0" Grid.Column="1" Header="Images" Margin="5" FontSize="20" Foreground="#007ACC" BorderBrush="#007ACC" BorderThickness="2" Padding="5">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>

                    <TextBlock Text="Image Url:" 
                           Grid.Row="0" 
                           Grid.Column="0" 
                           FontSize="13" 
                           Foreground="#007ACC" 
                           FontWeight="Bold"
                           Margin="0 0 10 0"
                            VerticalAlignment="Center"/>
                    <StackPanel Orientation="Horizontal"  Grid.Row="0"  Grid.Column="1">
                        <TextBox Text="{Binding Path=ImageUrl, UpdateSourceTrigger=PropertyChanged}"
                         FontSize="13"
                         GotFocus="ImageTextBox_GotFocus"
                         LostFocus="ImageTextBox_LostFocus"
                                 Width="250"
                         IsEnabled="{Binding Path = IsEnabledImageUrlTextBox}"/>
                        <Button Content="Add (ENTER)" Height="30" Width="80" FontSize="11" Background="#007ACC" Foreground="White" BorderBrush="#007ACC" BorderThickness="2"  Click="AddImage_Click"  IsEnabled="{Binding IsEnabledButton}" Margin="20 0 0 0">
                            <Button.Template>
                                <ControlTemplate TargetType="Button">
                                    <Border x:Name="border" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" CornerRadius="20">
                                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                                    </Border>
                                    <ControlTemplate.Triggers>
                                        <EventTrigger RoutedEvent="Button.Click">
                                            <BeginStoryboard>
                                                <Storyboard>
                                                    <ColorAnimation Storyboard.TargetName="border" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" From="#007ACC" To="#005F8B" Duration="0:0:0.2" />
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </EventTrigger>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter TargetName="border" Property="Background" Value="#005F8B" />
                                        </Trigger>
                                        <Trigger Property="IsPressed" Value="True">
                                            <Setter TargetName="border" Property="Background" Value="#00415E" />
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Button.Template>
                        </Button>
                    </StackPanel>
                    <StackPanel Orientation="Vertical" Grid.Row="1" Grid.ColumnSpan="2">
                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" >
                            <Button Content="&lt;" Height="50" Width="50" FontSize="20" Background="#007ACC" Foreground="White" BorderBrush="#007ACC" BorderThickness="2" HorizontalAlignment="Left" Click="BackButton_Click" focus:FocusBehavior.IsFocused="{Binding IsLeftButtonFocused}" IsEnabled="{Binding IsEnabledButton}" Margin="0 0 10 0">
                                <Button.Template>
                                    <ControlTemplate TargetType="Button">
                                        <Border x:Name="border" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" CornerRadius="20">
                                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                                        </Border>
                                        <ControlTemplate.Triggers>
                                            <EventTrigger RoutedEvent="Button.Click">
                                                <BeginStoryboard>
                                                    <Storyboard>
                                                        <ColorAnimation Storyboard.TargetName="border" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" From="#007ACC" To="#005F8B" Duration="0:0:0.2" />
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </EventTrigger>
                                            <Trigger Property="IsMouseOver" Value="True">
                                                <Setter TargetName="border" Property="Background" Value="#005F8B" />
                                            </Trigger>
                                            <Trigger Property="IsPressed" Value="True">
                                                <Setter TargetName="border" Property="Background" Value="#00415E" />
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Button.Template>
                            </Button>
                            <StackPanel Orientation="Vertical">
                                <TextBox                         
                                 FontSize="13"
                                 Background="Transparent" BorderBrush="Transparent" 
                                 IsReadOnly="True"  Focusable="False" IsHitTestVisible="False" Text="{Binding Path = ImageListValidation, UpdateSourceTrigger=PropertyChanged}"  Foreground="#FFA500"/>
                                <Border BorderBrush="{Binding Path=ImageListBorderColor}" BorderThickness="3"  CornerRadius="5">
                                    <Image Width="250" Height="200" Stretch="Fill" Source="{Binding ImageSource}"/>
                                </Border>
                            </StackPanel>
                            <Button Content=">" Margin="10 0 10 0" Height="50" Width="50" FontSize="20" Background="#007ACC" Foreground="White" BorderBrush="#007ACC" BorderThickness="2" HorizontalAlignment="Left" Click="NextButton_Click" IsEnabled="{Binding IsEnabledButton}">
                                <Button.Template>
                                    <ControlTemplate TargetType="Button">
                                        <Border x:Name="border" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" CornerRadius="20">
                                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                                        </Border>
                                        <ControlTemplate.Triggers>
                                            <EventTrigger RoutedEvent="Button.Click">
                                                <BeginStoryboard>
                                                    <Storyboard>
                                                        <ColorAnimation Storyboard.TargetName="border" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" From="#007ACC" To="#005F8B" Duration="0:0:0.2" />
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </EventTrigger>
                                            <Trigger Property="IsMouseOver" Value="True">
                                                <Setter TargetName="border" Property="Background" Value="#005F8B" />
                                            </Trigger>
                                            <Trigger Property="IsPressed" Value="True">
                                                <Setter TargetName="border" Property="Background" Value="#00415E" />
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Button.Template>
                            </Button>
                        </StackPanel>
                    </StackPanel>
                    <StackPanel Grid.Row="2" Grid.ColumnSpan="2" Orientation="Horizontal" HorizontalAlignment="Center">
                        <TextBox Text="{Binding Path=CurrentImageIndexToShow,UpdateSourceTrigger=PropertyChanged}"  FontSize="12" FontWeight="Bold" HorizontalAlignment="Center" Width="20" Height="20" TextAlignment="Center" IsHitTestVisible="False" IsReadOnly="True" IsEnabled="False"/>
                        <TextBox Text="{Binding Path=CurrentImageUrl,UpdateSourceTrigger=PropertyChanged}"  Margin="5" TextWrapping="Wrap" Width="400" Height="20" FontSize="11" TextAlignment="Left" IsHitTestVisible="False" IsReadOnly="True" IsEnabled="False"/>
                    </StackPanel>
                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" Grid.Row="3" Grid.ColumnSpan="2">
                        <Image 
                        Source="/Resources/Images/trash-can.png" 
                        Width="20" 
                        Height="20" 
                        Margin="5" />
                        <TextBlock FontSize="16" 
                               Text="Delete The Selected Image With DEL" 
                               Foreground="#007ACC" 
                               VerticalAlignment="Center"/>
                    </StackPanel>
                </Grid>
            </GroupBox>
            <StackPanel Orientation="Vertical">
                <StackPanel Orientation="Vertical" HorizontalAlignment="Center" Margin="5">
                    <StackPanel Orientation="Horizontal">
                        <Image Source="/Resources/Images/info.png" Width="20" Height="20" Margin="0 0 10 0"/>
                        <TextBlock FontSize="12" FontStyle="Italic" Text="Get Most Requested Country with" VerticalAlignment="Center" Foreground="#007ACC"/>
                        <TextBlock FontSize="12" FontStyle="Italic" VerticalAlignment="Center" Foreground="#FFA500" Text=" CTRL + 1"/>
                    </StackPanel>
                    <StackPanel Orientation="Horizontal" >
                        <Image Source="/Resources/Images/info.png" Width="20" Height="20" Margin="0 0 10 0"/>
                        <TextBlock FontSize="12" FontStyle="Italic" Text="Get Most Requested City with" VerticalAlignment="Center" Foreground="#007ACC"/>
                        <TextBlock FontSize="12" FontStyle="Italic" Text=" CTRL + 2" VerticalAlignment="Center" Foreground="#FFA500"/>
                    </StackPanel>
                    <StackPanel Orientation="Horizontal">
                        <Image Source="/Resources/Images/info.png" Width="20" Height="20" Margin="0 0 10 0"/>
                        <TextBlock FontSize="12" FontStyle="Italic" Text="Get Most Requested Language with" VerticalAlignment="Center" Foreground="#007ACC"/>
                        <TextBlock FontSize="12" FontStyle="Italic" Text=" CTRL + 3" VerticalAlignment="Center" Foreground="#FFA500"/>
                    </StackPanel>
                </StackPanel>
                <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Bottom" >
                <Button Content="    Save&#x0a;(CTRL + S)" Width="100" Height="60" Background="#007ACC" Foreground="White" FontSize="15" BorderThickness="0" Padding="5 0" Click="btnCreateTour_Click" Margin="5" IsEnabled="{Binding IsEnabledButton}">
                    <Button.Template>
                        <ControlTemplate TargetType="Button">
                            <Border x:Name="border" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" CornerRadius="20">
                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                            </Border>
                            <ControlTemplate.Triggers>
                                <EventTrigger RoutedEvent="Button.Click">
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <ColorAnimation Storyboard.TargetName="border" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" From="#007ACC" To="#005F8B" Duration="0:0:0.2" />
                                        </Storyboard>
                                    </BeginStoryboard>
                                </EventTrigger>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="border" Property="Background" Value="#005F8B" />
                                </Trigger>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter TargetName="border" Property="Background" Value="#00415E" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Button.Template>
                </Button>

                <Button Content=" Cancel&#x0a;  (ESC)" Width="100" Height="60" Background="#007ACC" Foreground="White" FontSize="15" BorderThickness="0" Padding="5 0" Click="CancelButton_Click" Margin="5" IsEnabled="{Binding IsEnabledButton}">
                    <Button.Template>
                        <ControlTemplate TargetType="Button">
                            <Border x:Name="border" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" CornerRadius="20">
                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                            </Border>
                            <ControlTemplate.Triggers>
                                <EventTrigger RoutedEvent="Button.Click">
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <ColorAnimation Storyboard.TargetName="border" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" From="#007ACC" To="#005F8B" Duration="0:0:0.2" />
                                        </Storyboard>
                                    </BeginStoryboard>
                                </EventTrigger>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="border" Property="Background" Value="#005F8B" />
                                </Trigger>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter TargetName="border" Property="Background" Value="#00415E" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Button.Template>
                    </Button>
                </StackPanel>
                
            </StackPanel>
        </StackPanel>
    </Grid>
</Window>
