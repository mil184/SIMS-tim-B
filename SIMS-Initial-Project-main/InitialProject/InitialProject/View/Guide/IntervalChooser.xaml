<Window x:Class="InitialProject.View.Guide.IntervalChooser"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:InitialProject.View.Guide"
        mc:Ignorable="d"
        Title="IntervalChooser" Height="400" Width="800"
        Background="#F2F2F2"
        WindowStartupLocation="CenterScreen">
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>

        <Border Grid.Row="0" Background="#E9F1F7" BorderThickness="3" BorderBrush="#007ACC" CornerRadius="5" Margin="2">
            <StackPanel Orientation="Horizontal" Grid.Row="0" HorizontalAlignment="Center">
            <StackPanel Orientation="Horizontal" Margin="10">
                <TextBlock Text="Start Date:" VerticalAlignment="Center" />
                    <DatePicker Margin="10" SelectedDate="{Binding Path = StartDateInput,UpdateSourceTrigger=PropertyChanged}" Width="150" SelectedDateChanged="DatePicker_SelectedDateChanged"/>
            </StackPanel>

            <StackPanel Orientation="Horizontal" Margin="10">
                <TextBlock Text="End Date:" VerticalAlignment="Center" />
                    <DatePicker  Margin="10" SelectedDate="{Binding Path = EndDateInput,UpdateSourceTrigger=PropertyChanged}" Width="150" SelectedDateChanged="DatePicker_SelectedDateChanged"/>
            </StackPanel>
        </StackPanel>
            </Border>
                <GroupBox Grid.Row="1" Header="Upcoming Tours" FontSize="28" Foreground="#007ACC" BorderBrush="#007ACC" BorderThickness="2">
            <DataGrid ItemsSource="{Binding UpcomingTours}" AutoGenerateColumns="False" IsReadOnly="true"  HorizontalAlignment="Stretch" Margin="10">
                <DataGrid.CellStyle>
                    <Style TargetType="DataGridCell">
                        <Setter Property="FontSize" Value="18"/>
                        <Setter Property="Padding" Value="10"/>
                    </Style>
                </DataGrid.CellStyle>
                <DataGrid.Columns>
                    <DataGridTextColumn Header="Name" Binding="{Binding Name}" Width="*" FontSize="18"/>
                    <DataGridTextColumn Header="Location" Binding="{Binding Location}" Width="*" FontSize="18"/>
                    <DataGridTextColumn Header="Start Time" Binding="{Binding Path=StartTime,StringFormat={}{0:dd.M.yyyy. HH:mm}}" Width="*" FontSize="18"/>
                </DataGrid.Columns>
            </DataGrid>
        </GroupBox>
        <StackPanel Grid.Row ="2" Orientation="Horizontal" HorizontalAlignment="Center">
            <Button Content="Generate Report&#x0a;    (CTRL + R)" Margin="10" Height="50" Width="140" FontSize="16" Background="#007ACC" Foreground="White" BorderBrush="#007ACC" BorderThickness="2" HorizontalAlignment="Center" Click="GenerateReport_Click" Grid.ColumnSpan="2">
                <Button.Template>
                    <ControlTemplate TargetType="Button">
                        <Border x:Name="border" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" CornerRadius="20">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <EventTrigger RoutedEvent="Button.Click">
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation Storyboard.TargetName="border" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" From="#007ACC" To="#005F8B" Duration="0:0:0.2" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="border" Property="Background" Value="#005F8B" />
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="border" Property="Background" Value="#00415E" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Button.Template>
            </Button>
            <Button Content="Cancel&#x0a; (ESC)" Margin="10" Height="50" Width="140" FontSize="16" Background="#007ACC" Foreground="White" BorderBrush="#007ACC" BorderThickness="2" HorizontalAlignment="Center" Click="CloseButton_Click" Grid.ColumnSpan="2">
                <Button.Template>
                    <ControlTemplate TargetType="Button">
                        <Border x:Name="border" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" CornerRadius="20">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <EventTrigger RoutedEvent="Button.Click">
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation Storyboard.TargetName="border" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" From="#007ACC" To="#005F8B" Duration="0:0:0.2" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="border" Property="Background" Value="#005F8B" />
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="border" Property="Background" Value="#00415E" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Button.Template>
            </Button>
        </StackPanel>
    </Grid>
</Window>
